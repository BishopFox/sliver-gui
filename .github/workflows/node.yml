name: Node.js CI

on:

  pull_request:
    branches: [ master ]

jobs:

  macos-build:
    runs-on: macos-latest
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: false

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

  - name: NPM Install
    run: |
     npm install
     cd ./workers/worker
     npm install
     cd ../..
     npm install -g electron-packager
     npm install -g @angular/cli
     npm install -g ngx-i18nsupport

    - run: npm run electron:macos

  linux-build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: NPM Install
      run: |
       npm install
       cd ./main/workers/worker
       npm install
       cd ../..
       npm install -g electron-packager
       npm install -g @angular/cli
       npm install -g ngx-i18nsupport
       npm install -g ts-node

    - name: Build Linux
      run: npm run electron:linux

  windows-build:

    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: NPM Install
      run: |
        npm install
        cd ./main/workers/worker
        npm install
        cd ../..
        npm install -g electron-packager
        npm install -g @angular/cli
        npm install -g ngx-i18nsupport
        npm install -g ts-node

    - run: npm run electron:windows

