name: Release

on:
  push:
    tags: v[1-9]+.[0-9]+.[0-9]+
    branches: master

jobs:

  macos-build:
    runs-on: macos-latest
    if: startsWith( github.ref, 'refs/tags/v')
    
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: false

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm install && cd ./workers/worker && npm install && cd ../..
    - run: npm install -g electron-packager
    - run: npm install -g @angular/cli
 
    - run: npm run electron:mac
    
    - name: MacOS Artifact
      uses: actions/upload-artifact@v2
      with:
        name: sliver-gui.dmg
        path: release/sliver-*.dmg

  linux-build:

    runs-on: ubuntu-latest
    if: startsWith( github.ref, 'refs/tags/v')

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install && cd ./workers/worker && npm install && cd ../..
    - run: npm install -g electron-packager
    - run: npm install -g @angular/cli

    - run: npm run electron:linux
    - name: Linux Artifact (deb)
      uses: actions/upload-artifact@v2
      with:
        name: sliver-gui.deb
        path: release/sliver-*.deb
    - name: Linux Artifact (rpm)
      uses: actions/upload-artifact@v2
      with:
        name: sliver-gui.rpm
        path: release/sliver-*.rpm

  windows-build:

    runs-on: windows-latest
    if: startsWith( github.ref, 'refs/tags/v')

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install && cd ./workers/worker && npm install && cd ../..
    - run: npm install -g electron-packager
    - run: npm install -g @angular/cli

    - run: npm run electron:windows
    - name: Windows Artifact
      uses: actions/upload-artifact@v2
      with:
        name: sliver-gui.exe
        path: release/sliver*.exe

  tagged-release:

    needs: [windows-build, linux-build, macos-build]

    name: "Tagged Release"
    if: startsWith( github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
    - run: mkdir -p ./release
    - uses: actions/download-artifact@v2
      with:
        path: ./release

    - name: "Release"
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          ./release/*.dmg
          ./release/*.exe
          ./release/*.deb
          ./release/*.rpm
